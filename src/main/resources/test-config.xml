<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- PropertyPlaceholderConfigurer for loading properties from application.properties -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:application.properties"/>
    </bean>

    <bean id="adyenClient" class="com.adyen.Client">
        <constructor-arg value="${adyen.apiKey}" />
        <constructor-arg value="${adyen.environment}" />
    </bean>

    <bean id="paymentApi" class="com.adyen.service.checkout.PaymentsApi">
        <constructor-arg ref="adyenClient" />
    </bean>

    <bean id="adyenConfig" class="com.example.payment.config.AdyenConfig">
        <property name="environment" value="${adyen.environment}" />
        <property name="apiKey" value="${adyen.apiKey}" />
        <property name="merchantAccount" value="${adyen.merchantAccount}" />
        <property name="webhookUsername" value="${adyen.webhook.username}" />
        <property name="webhookPassword" value="${adyen.webhook.passwors}" />
        <property name="webhookHMAC" value="${adyen.webhook.hmac}" />
    </bean>

    <bean id="hmacValidator" class="com.adyen.util.HMACValidator"/>

    <!-- H2 testna baza -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.h2.Driver"/>
        <property name="url" value="jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;MODE=PostgreSQL"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

    <bean id="dataSourceInitializer" class="org.springframework.jdbc.datasource.init.DataSourceInitializer">
        <property name="dataSource" ref="dataSource"/>
        <property name="databasePopulator">
            <bean class="org.springframework.jdbc.datasource.init.ResourceDatabasePopulator">
                <property name="scripts">
                    <list>
                        <value>classpath:schema.sql</value>
                    </list>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource" />
    </bean>

    <bean id="paymentDao" class="com.example.payment.adyen.dao.PaymentDao">
        <constructor-arg ref="namedParameterJdbcTemplate" />
    </bean>

    <bean id="paymentWebhookDao" class="com.example.payment.adyen.dao.PaymentWebhookDao">
        <constructor-arg ref="namedParameterJdbcTemplate" />
    </bean>

    <bean id="paymentService" class="com.example.payment.adyen.service.PaymentService">
        <constructor-arg ref="paymentApi" />
        <constructor-arg ref="adyenConfig" />
        <constructor-arg ref="paymentDao" />
        <constructor-arg ref="paymentWebhookDao" />
        <!-- Setter injection -->
        <property name="hmacValidator" ref="hmacValidator"/>
    </bean>

    <bean id="webhookHandler" class="com.adyen.notification.WebhookHandler" />

    <bean id="paymentValidator" class="com.example.payment.adyen.validator.PaymentValidator" />

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="handleNotification" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="handleNotificationPointcut" expression="execution(* com.example.payment.adyen.service.PaymentService.handleNotification(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="handleNotificationPointcut"/>
    </aop:config>

    <!-- Task executor -->
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="queueCapacity" value="25" />
    </bean>

    <bean id="adyenWebhookProcessor" class="com.example.payment.adyen.async.AsyncWebhookProcessor">
        <constructor-arg name="paymentService" ref="paymentService" />
    </bean>

    <bean id="databaseHelper" class="com.example.payment.helper.DatabaseHelper">
        <constructor-arg name="jdbcTemplate" ref="namedParameterJdbcTemplate" />
        <constructor-arg name="jdbc" ref="jdbcTemplate" />
    </bean>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <context:component-scan base-package="com.example.payment.adyen.controller" />
</beans>